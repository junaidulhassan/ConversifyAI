Introduction LangChain is a framework for developing applications powered by large language models (LLMs). LangChain simplifies every stage of the
LLM application lifecycle: Concretely, the framework consists of the following open-source libraries: These docs focus on the Python LangChain library.
Head here for docs on the JavaScript LangChain library. If you're looking to build something specific or are more of
a hands-on learner, check out our tutorials section . This is the best place to get started. These are the
best ones to get started with: Explore the full list of LangChain tutorials here , and check out other LangGraph
tutorials here . Here you‚Äôll find short answers to ‚ÄúHow do I‚Ä¶.?‚Äù types of questions. These how-to guides don‚Äôt cover
topics in depth ‚Äì you‚Äôll find that material in the Tutorials and the API Reference . However, these guides will
help you quickly accomplish common tasks. Check out LangGraph-specific how-tos here . Introductions to all the key parts of LangChain
you‚Äôll need to know! Here you'll find high level explanations of all LangChain concepts. For a deeper dive into LangGraph
concepts, check out this page . Head to the reference section for full documentation of all classes and methods in
the LangChain Python packages. Trace and evaluate your language model applications and intelligent agents to help you move from prototype
to production. Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it. Read up
on our Security best practices to make sure you're developing safely with LangChain. LangChain is part of a rich ecosystem
of tools that integrate with our framework and build on top of it. Check out our growing list of integrations
. Check out the developer's guide for guidelines on contributing and help getting your dev environment set up. Introduction On
this page Introduction LangChain is a framework for developing applications powered by large language models (LLMs). LangChain simplifies every stage
of the LLM application lifecycle: Development : Build your applications using LangChain's open-source building blocks , components , and third-party
integrations . Use LangGraph to build stateful agents with first-class streaming and human-in-the-loop support. Productionization : Use LangSmith to inspect,
monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence. Deployment : Turn your LangGraph
applications into production-ready APIs and Assistants with LangGraph Cloud . Concretely, the framework consists of the following open-source libraries: langchain-core
: Base abstractions and LangChain Expression Language. langchain-community : Third party integrations. Partner packages (e.g. langchain-openai , langchain-anthropic , etc.):
Some integrations have been further split into their own lightweight packages that only depend on langchain-core . langchain : Chains,
agents, and retrieval strategies that make up an application's cognitive architecture. LangGraph : Build robust and stateful multi-actor applications with
LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without
it. LangServe : Deploy LangChain chains as REST APIs. LangSmith : A developer platform that lets you debug, test, evaluate,
and monitor LLM applications. note These docs focus on the Python LangChain library. Head here for docs on the JavaScript
LangChain library. Tutorials ‚Äã If you're looking to build something specific or are more of a hands-on learner, check out
our tutorials section . This is the best place to get started. These are the best ones to get started
with: Build a Simple LLM Application Build a Chatbot Build an Agent Introduction to LangGraph Explore the full list of
LangChain tutorials here , and check out other LangGraph tutorials here . How-to guides ‚Äã Here you‚Äôll find short answers
to ‚ÄúHow do I‚Ä¶.?‚Äù types of questions. These how-to guides don‚Äôt cover topics in depth ‚Äì you‚Äôll find that material
in the Tutorials and the API Reference . However, these guides will help you quickly accomplish common tasks. Check out
LangGraph-specific how-tos here . Conceptual guide ‚Äã Introductions to all the key parts of LangChain you‚Äôll need to know! Here
you'll find high level explanations of all LangChain concepts. For a deeper dive into LangGraph concepts, check out this page
. API reference ‚Äã Head to the reference section for full documentation of all classes and methods in the LangChain
Python packages. Ecosystem ‚Äã ü¶úüõ†Ô∏è LangSmith ‚Äã Trace and evaluate your language model applications and intelligent agents to help you
move from prototype to production. ü¶úüï∏Ô∏è LangGraph ‚Äã Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can
be used without it. Additional resources ‚Äã Security ‚Äã Read up on our Security best practices to make sure you're
developing safely with LangChain. Integrations ‚Äã LangChain is part of a rich ecosystem of tools that integrate with our framework
and build on top of it. Check out our growing list of integrations . Contributing ‚Äã Check out the developer's
guide for guidelines on contributing and help getting your dev environment set up. Edit this page
